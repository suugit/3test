name: Deploy Docker

on:
  push:
    branches: [ "main", "deploy" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Copy deploy folder to server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        source: './deploy'
        target: '~'

    # 환경변수 생성하기  
    - name: Backup and create .env file
      run: |
        if [ -f ~/deploy/.env ]; then
          mv ~/deploy/.env ~/deploy/.env.bak
        fi
        printf "${{ secrets.ENV_FILE }}" >> ~/deploy/.env

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          cd ~/deploy
          docker compose down
          docker compose pull
          docker compose up -d
          docker image prune -a -f

    - name: Notify Discord
      uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
        title: 통합 배포 상태
        description: ${{ job.status == 'success' && '배포성공' || '배포실패' }}
        color: ${{ job.status == 'success' && '0x00ff00' || '0xff0000' }} 